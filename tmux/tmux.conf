# new session
new-session

#termset
#set -g default-terminal "screen-256color"


set-option -g set-titles on
#set-option -g set-titles-string '[#S:#I #H] #W'  # use screen title

# focus events enabled for terminals that support them
set -g focus-events on

# Reload config with r
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# Easier splits
bind | split-window -h
bind - split-window -v

# Setup sync pane toggle to Ctrl+x
bind -n C-x setw synchronize-panes

# Smart pane switching with awareness of vim splits This is linked to the vim-tmux plugin
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

#ctrl-vim for window
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

## Status Bar
set -g status on
set -g status-interval 20
set -g status-position top
setw -g monitor-activity on
setw -g automatic-rename on
set -g visual-activity on

# Sometimes we need to be local
if '[ -f $HOME/.tmux.local.conf ]' 'source $HOME/.tmux.local.conf'

if '[ -f /usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf ]' 'source /usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'
if '[ -f /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf ]' 'source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'
if '[ -f ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf ]' 'source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'
if '[ -f ~/.local/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf ]' 'source ~/.local/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf'
if '[ -f ~/.local/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf ]' 'source ~/.local/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf'
if '[ -f ~/.local/lib/python3.8/site-packages/powerline/bindings/tmux/powerline.conf ]' 'source ~/.local/lib/python3.8/site-packages/powerline/bindings/tmux/powerline.conf'
if '[ -f ~/.local/lib/python3.9/site-packages/powerline/bindings/tmux/powerline.conf ]' 'source ~/.local/lib/python3.9/site-packages/powerline/bindings/tmux/powerline.conf'
if '[ -f ~/.local/lib/python3.9/site-packages/powerline/bindings/tmux/powerline.conf ]' 'source ~/.local/lib/python3.9/site-packages/powerline/bindings/tmux/powerline.conf'
if '[ -f /usr/local/lib/python3.6/dist-packages/powerline/bindings/tmux/powerline.conf ]' 'source /usr/local/lib/python3.6/dist-packages/powerline/bindings/tmux/powerline.conf'
if '[ -f /usr/local/lib/python3.10/site-packages/powerline/bindings/tmux/powerline.conf ]' 'source /usr/local/lib/python3.10/site-packages/powerline/bindings/tmux/powerline.conf'

#auto install tpm
if 'test ! -d ~/.tmux/plugins/tpm' "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-cpu'
#
# # Other examples:
# # set -g @plugin 'github_username/plugin_name'
# # set -g @plugin 'git@github.com/user/plugin'
# # set -g @plugin 'git@bitbucket.com/user/plugin'
#
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
